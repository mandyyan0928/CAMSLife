
@model CaliphWeb.ViewModel.PersistencyCalculatorViewModel
@using CaliphWeb.ViewModel
<div class="card">
    <div class="card-header">
        <h5 class="card-title">Product Summary</h5>
    </div>

    <div class="card-body">
        <table class="table">
            <thead>
                <tr>
                    <th>Traditional</th>
                    <th>Cases</th>
                    <th>%</th>
                    <th>AFYC</th>
                    <th>%</th>
                    <th>%</th>
                    <th>APS</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                </tr>
                @{ var totalCases = Model.AgentPolicies.Count;
                    var sunHeritage = Model.AgentPolicies.Where(x => SunlifeProduct.SunHeritage.Contains( x.product_name)  ).ToList();
                    var sunPrimeLink = Model.AgentPolicies.Where(x => SunlifeProduct.SunPrimeLink.Contains( x.product_name) ).ToList();
                   

                    var sunHajj = Model.AgentPolicies.Where(x => SunlifeProduct.SunHajj.Contains( x.product_name)).ToList();
                    var sunSecureSaver = Model.AgentPolicies.Where(x => SunlifeProduct.SunSecureSaver.Contains( x.product_name)).ToList();
 

                    var totalTraditionalProduct =
                        sunHajj.Count() +
                        sunSecureSaver.Count() ;


                    var totalInvestmentProduct = sunHeritage.Count() +
                        sunPrimeLink.Count() ;


                    var traditionalRatio = totalCases == 0 ? 0 : totalTraditionalProduct / totalCases;
                    var investmentRatio = totalCases == 0 ? 0 : totalInvestmentProduct / totalCases;

                    var totalTradictionalAce = sunHajj.Sum(x => x.AnnualisedPremium) +
                        sunSecureSaver.Sum(x => x.AnnualisedPremium) ;


                    var totalInvestmentAce = sunHeritage.Sum(x => x.AnnualisedPremium) +
                   sunPrimeLink.Sum(x => x.AnnualisedPremium) ;


                    var totalAce = totalInvestmentAce + totalTradictionalAce;
                    double totalAvr = 0;
                    double totalRatio = 0;

                }

                <tr>
                    <th>Sun Hajj</th>
                    @{ var productCount = sunHajj.Count();
                        var productACE = sunHajj.Sum(x => x.AnnualisedPremium);
                        var ratio = (productACE / totalTradictionalAce) * 100;
                        var avr = productCount == 0 ? 0 : productACE / productCount;
                        totalAvr += avr;
                        totalRatio += ratio;

                    }
                    <td>@productCount</td>
                    <td>@((totalCases == 0 ? 0 :( ((double)productCount / totalCases)*100)).ToString("n2")  +"%")</td>
                    <td>
                        @productACE.ToString("n2")
                    </td>
                    <td></td>

                    <td>
                        @ratio.ToString("n2") %
                    </td>
                    <td>
                        @avr.ToString("n2")
                    </td>
                </tr>
                <tr>
                    <th>Sun Secure Saver-i</th>
                    @{ productCount = sunSecureSaver.Count();
                        productACE = sunSecureSaver.Sum(x => x.AnnualisedPremium);
                        ratio = (productACE / totalTradictionalAce) * 100;
                        avr = productCount == 0 ? 0 : productACE / productCount;
                        totalAvr += avr;
                        totalRatio += ratio;
                    }
                    <td>@productCount</td>
                    <td>@((totalCases == 0 ? 0 :( ((double)productCount / totalCases)*100)).ToString("n2")  +"%")</td>
                    <td>
                        @productACE.ToString("n2")
                    </td>
                    <td></td>

                    <td>
                        @ratio.ToString("n2") %
                    </td>
                    <td>
                        @avr.ToString("n2")
                    </td>
                </tr>
                <tr>
                    <th>Total</th>

                    <td>@totalTraditionalProduct</td>
                    <td> @totalRatio.ToString("n0")%</td>
                    <td>
                        @totalTradictionalAce.ToString("n2")
                    </td>
                    <th>
                        @((((double)totalTradictionalAce/ totalAce)*100).ToString("n2")) %

                    </th>

                    <td>
                    </td>
                    <td>
                        @((totalTraditionalProduct == 0?0:( totalTradictionalAce / totalTraditionalProduct)).ToString("n2")) 
                    </td>
                </tr>
                @{ totalRatio = 0;
                    totalAvr = 0;}
                <tr>
                    <th>Investment Link</th>
                    <th>Cases</th>
                    <th>%</th>
                    <th>AFYC</th>
                    <th>%</th>
                    <th>%</th>
                    <th>APS</th>
                </tr>
              
                <tr>
                    <th>Sun Heritage-i</th>
                    @{ productCount = sunHeritage.Count();
                        productACE = sunHeritage.Sum(x => x.AnnualisedPremium);
                        ratio = (productACE / totalInvestmentAce) * 100;
                        avr = productCount == 0 ? 0 : productACE / productCount;
                        totalAvr += avr;
                        totalRatio += ratio;
                    }
                    <td>@productCount</td>
                    <td>@((totalCases == 0 ? 0 :( ((double)productCount / totalCases)*100)).ToString("n2")  +"%")</td>
                    <td>
                        @productACE.ToString("n2")
                    </td>
                    <td></td>

                    <td>
                        @ratio.ToString("n2") %
                    </td>
                    <td>
                        @avr.ToString("n2")
                    </td>
                </tr>
                <tr>
                    <th>Sun Prime Link-i </th>
                    @{ productCount = sunPrimeLink.Count();
                        productACE = sunPrimeLink.Sum(x => x.AnnualisedPremium);
                        ratio = (productACE / totalInvestmentAce) * 100;
                        avr = productCount == 0 ? 0 : productACE / productCount;
                        totalAvr += avr;
                        totalRatio += ratio;
                    }
                    <td>@productCount</td>
                    <td>@((totalCases == 0 ? 0 :( ((double)productCount / totalCases)*100)).ToString("n2")  +"%")</td>
                    <td>
                        @productACE.ToString("n2")
                    </td>
                    <td></td>

                    <td>
                        @ratio.ToString("n2") %
                    </td>
                    <td>
                        @avr.ToString("n2")
                    </td>
                </tr>
                <tr>
                    <th>Total</th>

                    <td>@totalInvestmentProduct</td>
                    <td> @totalRatio.ToString("n0")%</td>
                    <td>
                        @totalInvestmentAce.ToString("n2")
                    </td>
                    <th>
                        @((((double)totalInvestmentAce / totalAce)*100).ToString("n2")) %

                    </th>

                    <td>
                    </td>
                    <td>
                        @((totalInvestmentProduct == 0?0:(totalInvestmentAce / totalInvestmentProduct)).ToString("n2")) 
                    </td>
                </tr>
                <tr>
                    <th>Grand Total</th>

                    <td>@totalCases</td>
                    <td>  </td>
                    <td>
                        @totalAce.ToString("n2")
                    </td>
                    <th>

                    </th>

                    <td>
                    </td>
                    <td>
                        @(((totalAce/totalCases)*100).ToString("n2"))
                    </td>
                </tr>
            </tbody>
        </table>

    </div>
</div>

<div class="card">
    <div class="card-header">
        <h5 class="card-title">Product Term Summary</h5>
    </div>

    <div class="card-body">
        @*update here*@
        @{ var term_20years = Model.AgentPolicies.Where(x => CaliphWeb.Helper.ConvertHelper.ConvertInt(x.term) >= 20);
            var term_10to19years = Model.AgentPolicies.Where(x => CaliphWeb.Helper.ConvertHelper.ConvertInt(x.term) >= 10 && CaliphWeb.Helper.ConvertHelper.ConvertInt(x.term) <= 19);
            var term_6to9years = Model.AgentPolicies.Where(x => CaliphWeb.Helper.ConvertHelper.ConvertInt(x.term) >= 6 && CaliphWeb.Helper.ConvertHelper.ConvertInt(x.term) <= 9);
            var term_5years = Model.AgentPolicies.Where(x => CaliphWeb.Helper.ConvertHelper.ConvertInt(x.term) <= 5);

            double totalTermRatio = 0;
            double totalTerm = 0;
        }
        <table class="table">
            <thead>
                <tr>
                    <th></th>
                    <th>Cases</th>
                    <th>%</th>
                    <th>AFYC</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>20 Years & Above</td>
                    @{ var tCount = term_20years.Count();
                        var tRatio = totalCases == 0 ? 0 : ((double)tCount / totalCases) * 100;
                        var tAce = term_20years.Sum(x => x.AnnualisedPremium);
                        totalTermRatio += tRatio;
                        totalTerm += tAce;
                    }
                    <td>
                        @tCount
                    </td>
                    <td>
                        @tRatio.ToString("n2")
                    </td>
                    <td>
                        @tAce.ToString("n2")
                    </td>
                </tr>
                <tr>
                    <td>10 Years - 19 Years</td>
                    @{ tCount = term_10to19years.Count();
                        tRatio = totalCases == 0 ? 0 : ((double)tCount / totalCases) * 100;
                        tAce = term_10to19years.Sum(x => x.AnnualisedPremium);
                        totalTermRatio += tRatio;
                        totalTerm += tAce;
                    }
                    <td>
                        @tCount
                    </td>
                    <td>
                        @tRatio.ToString("n2")
                    </td>
                    <td>
                        @tAce.ToString("n2")
                    </td>
                </tr>
                <tr>
                    <td>6 Years - 9 Years</td>
                    @{ tCount = term_6to9years.Count();
                        tRatio = totalCases == 0 ? 0 : ((double)tCount / totalCases) * 100;
                        tAce = term_6to9years.Sum(x => x.AnnualisedPremium);
                        totalTermRatio += tRatio;
                        totalTerm += tAce;
                    }
                    <td>
                        @tCount
                    </td>
                    <td>
                        @tRatio.ToString("n2")
                    </td>
                    <td>
                        @tAce.ToString("n2")
                    </td>
                </tr>
                <tr>
                    <td> 5 Years & Below</td>
                    @{ tCount = term_5years.Count();
                        tRatio = totalCases == 0 ? 0 : ((double)tCount / totalCases) * 100;
                        tAce = term_5years.Sum(x => x.AnnualisedPremium);
                        totalTermRatio += tRatio;
                        totalTerm += tAce;
                    }
                    <td>
                        @tCount
                    </td>
                    <td>
                        @tRatio.ToString("n2")
                    </td>
                    <td>
                        @tAce.ToString("n2")
                    </td>
                </tr>


                <tr>
                    <td> Total</td>

                    <td>
                        @totalCases
                    </td>
                    <td>
                        @totalTermRatio.ToString("n2")
                    </td>
                    <td>
                        @totalTerm.ToString("n2")
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>