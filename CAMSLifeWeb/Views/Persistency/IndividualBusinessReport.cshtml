
@model CaliphWeb.ViewModel.PersistencyCalculatorViewModel
@using CaliphWeb.ViewModel
@{
    ViewBag.Title = "Business Report";
}
<script src="~/global_assets/js/plugins/visualization/echarts/echarts.min.js"></script>
<script src="~/global_assets/js/demo_pages/form_validation.js"></script>
<script src="~/global_assets/js/demo_pages/form_select2.js"></script>
<script src="~/global_assets/js/plugins/tables/datatables/datatables.min.js"></script>
<script src="~/global_assets/js/demo_pages/datatables_basic.js"></script>
<script src="~/global_assets/js/demo_charts/echarts/light/pies/pie_basic.js"></script>

<script src="~/global_assets/js/plugins/tables/datatables/extensions/pdfmake/pdfmake.min.js"></script>
<script src="~/global_assets/js/plugins/tables/datatables/extensions/pdfmake/vfs_fonts.min.js"></script>
<script src="~/global_assets/js/plugins/tables/datatables/extensions/buttons.min.js"></script>
<script src="~/global_assets/js/demo_pages/datatables_extension_buttons_html5.js"></script>
<!-- Page header -->
<div class="page-header page-header-light">
    <div class="page-header-content header-elements-lg-inline">
        <div class="page-title d-flex">
            <h4><i class="icon-list"></i> <span class="font-weight-semibold">Cases</span> </h4>
            <a href="#" class="header-elements-toggle text-body d-lg-none"><i class="icon-more"></i></a>
        </div>
    </div>

    <div class="breadcrumb-line breadcrumb-line-light header-elements-lg-inline">
        <div class="d-flex">
            <div class="breadcrumb">
                <a class="breadcrumb-item"><i class="icon-users4 mr-2"></i> Business Report</a>
                <a class="breadcrumb-item"> Cases</a>
            </div>

            <a href="#" class="header-elements-toggle text-body d-lg-none"><i class="icon-more"></i></a>
        </div>

    </div>
</div>
<!-- /page header -->
<!-- Basic datatable -->
<div class="card" id="search">
    <div class="card-header">
    </div>
    <div class="card-body">
        <div class=" table-responsive">
            <div class="table datatable-header">


                <div class="row mt-5">
                    <div class="col-md-12 text-center">
                        <h5>
                            Cases for @Model.AgentId , @Model.AgentName as for period
                            <label>
                                @Model.StartDate.ToString("dd/MM/yyyy")
                            </label> to
                            <label>
                                @Model.EndDate.ToString("dd/MM/yyyy")
                            </label>
                        </h5>
                    </div>



                    <div class="row mt-5">
                        <div class="col-md-12">
                            <ul class="nav nav-tabs nav-tabs-highlight nav-justified">
                                <li class="nav-item"><a href="#justified-left-tab1" class="nav-link active" data-toggle="tab"><i class="icon-calculator2"></i> Cases</a></li>
                                <li class="nav-item"><a href="#justified-left-tab2" onclick="InitGraph()" class="nav-link " data-toggle="tab"><i class="icon-stats-bars2"></i> Dashboard</a></li>
                                <li class="nav-item"><a href="#justified-left-tab3" class="nav-link " data-toggle="tab"><i class="icon-table"></i> Dashboard2</a></li>
                            </ul>
                            <div class="tab-content" id="content">


                                <!--Calculator-->
                                <div class="tab-pane fade show active" id="justified-left-tab1">
                                    @Html.Partial("~/Views/Persistency/_IndividualBusinessReport_Cases.cshtml", Model)
                                </div>
                                <!--Dashboard-->
                                <div class="tab-pane fade" id="justified-left-tab2">
                                    @Html.Partial("~/Views/Persistency/_PersistencyPaymentMethodSummary.cshtml", Model)



                                    @Html.Partial("~/Views/Persistency/_PersistencySummary.cshtml", Model)
                                </div>
                                <!--Dashboard 2-->
                                <div class="tab-pane fade" id="justified-left-tab3">
                                    @Html.Partial("~/Views/Persistency/_PersistencyProductTermSummary.cshtml", Model)
                                </div>
                                <!--Planning-->

                            </div>

                        </div>
                    </div>
                    <div class="row">

                    </div>
                </div>

            </div>
        </div>
    </div>
    <!-- /basic datatable -->
    <!-- Scrollable modal -->
    <div id="modal_scrollable" class="modal fade" tabindex="-1">
        <div class="modal-dialog modal-dialog-scrollable modal-xl">
            <div class="modal-content">
                <div class="modal-header pb-3">
                    <h5 class="modal-title" id="modal-title">Direct Group</h5>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>

                <div class="modal-body py-0" id="modal-body">
                    <ul id="direct-group-agent">
                    </ul>
                </div>

                <div class="modal-footer pt-3">
                    <button type="button" class="btn btn-link" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <!-- /scrollable modal -->

</div>
    @section Scripts{

        <script type="text/javascript">

        function LoadPayModePie() {
            var pie_donut_element = echarts.init(document.getElementById('paymode_pie'));
            var option = {

                // Colors
                color: [
                    '#2ec7c9', '#b6a2de', '#5ab1ef', '#ffb980', '#d87a80',
                    '#8d98b3', '#e5cf0d', '#97b552', '#95706d', '#dc69aa',
                    '#07a2a4', '#9a7fd1', '#588dd5', '#f5994e', '#c05050',
                    '#59678c', '#c9ab00', '#7eb00a', '#6f5553', '#c14089'
                ],

                // Global text styles
                textStyle: {
                    fontFamily: 'Roboto, Arial, Verdana, sans-serif',
                    fontSize: 13
                },

                // Add title
                title: {
                    text: 'Pay Mode Summary',
                    left: 'center',
                    textStyle: {
                        fontSize: 17,
                        fontWeight: 500
                    },
                    subtextStyle: {
                        fontSize: 12
                    }
                },

                // Add tooltip
                tooltip: {
                    trigger: 'item',
                    backgroundColor: 'rgba(0,0,0,0.75)',
                    padding: [10, 15],
                    textStyle: {
                        fontSize: 13,
                        fontFamily: 'Roboto, sans-serif'
                    },
                    formatter: "{b}: {c} ({d}%)"
                },

                // Add legend
                legend: {
                    orient: 'vertical',
                    top: 'bottom',
                    left: 0,
                    data: ['Monthly', 'Quarterly', 'Half Annual', 'Annual'],
                    itemHeight: 8,
                    itemWidth: 8
                },

                // Add series
                series: [{
                    name: 'Browsers',
                    type: 'pie',

                    itemStyle: {
                        normal: {
                            borderWidth: 1,
                            borderColor: '#fff'
                        }
                    },
                    data: [
                        {
                            value: @Model.TotalMonthly, name: 'Monthly'
                        },
                        { value: @Model.TotalQuarterly, name: 'Quarterly' },
                        { value: @Model.TotalHalfAnnual, name: 'Half Annual' },
                        { value: @Model.TotalAnnual, name: 'Annual' },
                    ]
                }]
            };
            pie_donut_element.setOption(option);

        }

function LoadStatusPie() {
    var pie_donut_element = echarts.init(document.getElementById('status_pie'));
    var option = {

        // Colors
        color: [
            '#f5994e', '#c05050', '#07a2a4', '#9a7fd1', '#588dd5',
            '#e5cf0d', '#b6a2de', '#5ab1ef', '#ffb980',

            '#8d98b3', '#97b552', '#95706d', '#dc69aa', '#d87a80',

            '#59678c', '#c9ab00', '#2ec7c9', '#7eb00a', '#6f5553', '#c14089'
        ],


        // Global text styles
        textStyle: {
            fontFamily: 'Roboto, Arial, Verdana, sans-serif',
            fontSize: 13
        },

        // Add title
        title: {
            text: 'Certifcate Summary',
            left: 'center',
            textStyle: {
                fontSize: 17,
                fontWeight: 500,

            },
            subtextStyle: {
                fontSize: 12
            }
        },

        // Add tooltip
        tooltip: {
            trigger: 'item',
            backgroundColor: 'rgba(0,0,0,0.75)',
            padding: [10, 15],
            textStyle: {
                fontSize: 13,
                fontFamily: 'Roboto, sans-serif'
            },
            formatter: "{b}: {c} ({d}%)"
        },

        // Add legend
        legend: {
            orient: 'vertical',
            top: 'bottom',
            left: 0,
            data: ['In Force', 'Lapsed', 'Freelook Cancellation', 'Contract Surrendered'],
            itemHeight: 8,
            itemWidth: 8
        },

        // Add series
        series: [{
            name: 'Browsers',
            type: 'pie',

            itemStyle: {
                normal: {
                    borderWidth: 1,
                    borderColor: '#fff',

                }
            },
            data: [
                { value: @Model.TotalInForce, name: 'In Force'
},
{ value: @Model.TotalLapsed, name: 'Lapsed' },
@*{ value: @Model.TotalFreelookCancellation, name: 'Freelook Cancellation' },*@
{ value: @Model.TotalContractSurrendereds, name: 'Contract Surrendered' },
                    ]
                }]
            };
pie_donut_element.setOption(option);

        }

        function ReplaceNumberWithCommas(yourNumber) {
            //Seperates the components of the number
            var n = yourNumber.toString().split(".");
            //Comma-fies the first part
            n[0] = n[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            //Combines the two sections
            return n.join(".");
        }

        $(document).ready(function () {
            TargetPercentChange();
        })

        function InitGraph() {
            LoadPayModePie();
            LoadStatusPie();
        }



        let startOfMonth = new Date('@Model.StartDate.ToString("yyyy-MM-dd")');
        let endOfMonth =new Date('@Model.EndDate.ToString("yyyy-MM-dd")');
        // Basic initialization
        $('#CreatedDate').daterangepicker({
            parentEl: '.content-inner',
            startDate: startOfMonth,
            endDate: endOfMonth,

        });
        function SearchData(page) {
            @{ var filter = new CaliphWeb.ViewModel.PersistencyCalculatorViewModel
                                {
                                    AgentId = Model.AgentId,
                                    AgentName = Model.AgentName
                                };
            }
            var searchFilter = @Html.Raw(Json.Encode(filter));
                searchFilter.StartDate = $('#CreatedDate').data().daterangepicker.startDate._d.toJSON();
                searchFilter.EndDate = $('#CreatedDate').data().daterangepicker.endDate._d.toJSON();

                BlockUIHelper.blockUI('search')
            //save to tempdata
            // reload

            // grab from tempdata when page load
            $.ajax({
                    url: '@Url.Action("Search", "Persistency")',
                type: 'POST',
                data: { req: searchFilter, page:'s' },
                success: function (response) {
                    //$('#client-table').html(response);
                    //  location.reload();
                }
            });

            }

            function generateFileName() {
                // Your logic to generate the filename dynamically
                var currentDate = new Date().toISOString().slice(0, 10); // Example: Current date
                var fileName = 'BusinessReport_' + currentDate;
                return fileName;
            }


        </script>
    }
