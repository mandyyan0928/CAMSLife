
@{
    ViewBag.Title = "Deal";
}

@using CaliphWeb.ViewModel.Data
@model CaliphWeb.Models.ViewModel.AgentRecruitListViewModel
<script src="~/global_assets/js/demo_pages/form_select2.js"></script>
<script src="~/global_assets/js/demo_pages/picker_date.js"></script>
<script src="~/global_assets/js/demo_pages/components_collapsible.js"></script>

<script src="~/global_assets/js/demo_pages/form_input_groups.js"></script>
<!-- Page header -->
<div class="page-header page-header-light">
    <div class="page-header-content header-elements-lg-inline">
        <div class="page-title d-flex">
            <h4><i class="icon-list"></i> <span class="font-weight-semibold">Recruitment List</span> </h4>
            <a href="#" class="header-elements-toggle text-body d-lg-none"><i class="icon-more"></i></a>
        </div>


    </div>


    <div class="breadcrumb-line breadcrumb-line-light header-elements-lg-inline">
        <div class="d-flex">
            <div class="breadcrumb">
                <a class="breadcrumb-item"><i class="icon-coin-dollar mr-2"></i>Agent Recruitment</a>
                <a class="breadcrumb-item"> Recruitment List</a>
            </div>

            <a href="#" class="header-elements-toggle text-body d-lg-none"><i class="icon-more"></i></a>
        </div>

    </div>
</div>
<!-- /page header -->
<!-- Basic datatable -->
<div class="card">
    <div class="card-header">
    </div>
    <div class="card-body">
        <div class=" table-responsive">
            <div class="datatable-header">
                <div class="row align-content-center">
                    <div class="col-md-2 p-0">
                        <label class="m-1">
                            <span>Agent Recruit Name:</span><br />
                            <input type="text" id="Name" name="Name" class="form-control">


                        </label>
                    </div>

                    <div class="col-md-2">
                        <label class="m-1 w-100">
                            <span>Status:</span>
                            <select class="custom-select" name="StatusId" id="StatusId">
                                <option value="">All</option>
                                @foreach (var source in Model.Status)
                                {
                                    <option value="@source.MasterDataId">@source.Name</option>
                                }

                            </select>
                        </label>
                    </div>
                    <div class="col-md-3 m-1">
                        <span> Date:</span>
                        <div class="input-group">
                            <span class="input-group-prepend">
                                <span class="input-group-text"><i class="icon-calendar22"></i></span>
                            </span>
                            <input type="text" id="CreatedDate" class="form-control" value="">
                        </div>
                    </div>
                    <div class="col-md-2 p-0">
                        <label class="m-1">
                            <br />
                            <button type="button" onclick="SearchData(1)" class="btn btn-primary d-inline" id="bootbox_form"> <i class="icon-search4"></i> </button>

                        </label>
                    </div>
                    <div class="col-md-2 text-right">
                        <label class="m-1  text-left">
                            <span>Show:</span>
                            <select onchange="SearchData(1)" id="show-entries" class="custom-select">
                                <option value="10">10</option>
                                <option value="25">25</option>
                                <option value="50">50</option>
                                <option value="100">100</option>
                            </select>
                        </label>
                    </div>
                </div>
            </div>
            <div class="card-group-control card-group-control-left" id="accordion-control">


                <div id="recruitment-table">
                    @Html.Partial("_AgentRecruitmentListTable", Model.AgentRecruimentData)
                </div>
            </div>
        </div>

    </div>
</div>
<!-- /basic datatable -->
<!-- add  activty modal -->
<div id="modal_addActualActivity" class="modal fade" tabindex="-1">
    <div class="modal-dialog modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header pb-3">
                <h5 class="modal-title">Add Activity</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <div class="modal-body py-0">
                @Html.Partial("_AddAgentRecruitmentActivity", Model.AddAgentRecruitmentActivityViewModel)
            </div>

            <div class="modal-footer pt-3">
                <button type="button" class="btn btn-link" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="AddActivity()">Submit <i class="icon-paperplane ml-2"></i></button>
            </div>
        </div>
    </div>
</div>


<!-- /add  activity modal -->

@section Scripts{
    <script type="text/template" id="loading">
        <div class="text-center mt-2 mb-3">
            <div class="pace-demo">
                <div class="theme_xbox_lg">
                    <div class="pace_progress" data-progress-text="60%" data-progress="60" style="width: 60%;"></div>
                    <div class="pace_activity"></div>
                </div>
            </div>
        </div>
    </script>
    <script type="text/javascript">
        let startOfMonth = moment();
        let endOfMonth = moment().endOf('year');

        // Basic initialization
        $('#CreatedDate').daterangepicker({
            autoUpdateInput: false
            //startDate: startOfMonth,
            //endDate: endOfMonth,
        });

        $('#CreatedDate').on('apply.daterangepicker', function (ev, picker) {
            $(this).val(picker.startDate.format('MM/DD/YYYY') + ' - ' + picker.endDate.format('MM/DD/YYYY'));
        });
        $("#CreatedDate").on('cancel.daterangepicker', function (ev, picker) {
            $(this).val('').change();
        });
            // Custom bootbox dialog with form
        var swalInit = swal.mixin({
            buttonsStyling: false,
            customClass: {
                confirmButton: 'btn btn-primary',
                cancelButton: 'btn btn-light',
                denyButton: 'btn btn-light',
                input: 'form-control'
            }
        });

        function ShowDetail(element) {
            var id = $(element).val();
            if (id == 7) {
                $('#detail').show();
                $('#refName').attr('required', true);
                $('#refHp').attr('required', true);
            }
            else {
                $('#detail').hide();
                $('#refName').attr('required', false);
                $('#refHp').attr('required', false);
            }

        }

        function ShowAddActivity(agentRecruitId) {
            $('#AgentId').val(agentRecruitId).trigger('change');;
            $('#detail').hide();
            $('#modal_addActualActivity').modal('show');

        }
           function ShowContact(element) {
            var id = $(element).val();
            var contact = $(element).find(':selected').attr('data-contact')
               $('#contact').text(contact);


               var agentRecruitId = $(element).find(':selected').attr('data-id')
               $("#ActivityPointId").empty().append($("<option></option>").val('').html('Select'));
            // call controller to get activity list
               $.ajax({
                   type: "POST",
                   url:  '@Url.Action("GetRecruimentActivity", "Agent")',
                   data: { id: agentRecruitId },
                   dataType: "json",
                   contentType: 'application/x-www-form-urlencoded',
                   success: function (res) {

                       // append to activity drop down
                       console.log(res);
                       $.each(res, function (data, value) {
                           console.log(value);
                           $("#ActivityPointId").append($("<option></option>").val(value.ActivityPointId).html(value.Name));
                         //  $('#ActivityPointId').niceSelect('update')
                       });


                   },
                   error: function (res) {
                       console.log(res);
                   }

               });


        }

        function  ChangeTimeTo() {
            var date = $('#Date').val();
            var timefrom = $('#timefrom').val();
            var startDate = new Date(date + " " + timefrom);



            var dateto = startDate.getHours() + 1;
            var picker = $('#timeto').pickatime().pickatime('picker');

            var dateToMin = startDate.getMinutes();
            picker.set('select', [dateto, dateToMin]);
            picker.set('min', [dateto, dateToMin]);
            console.log(dateto)
            console.log(dateToMin)

            //$('#timeto').pickatime({
            //    onStart: function () {
            //        var date = new Date();
            //        this.set('select', [dateto, dateToMin])
            //        endDate = new Date(date + " " + timeto);
            //    },
            //    min: [8, 00],
            //    max: [23, 30]
            //});
        }


        function AddActivity() {
            var date = $('#Date').val();
            var timefrom = $('#timefrom').val();
           var startDate = new Date(date + " " + timefrom);
            var timeto = $('#timeto').val();
          var   endDate = new Date(date + " " + timeto);

            $('#ActivityStartDate').val(startDate.toJSON());
            $('#ActivityEndDate').val(endDate.toJSON());


            if (startDate >= endDate) {
                swalInit.fire({
                    text: 'Activity end date cannot smaller than start date',
                    icon: 'warning'
                });

                return;
            }
            var form = $("#add-activity");

            form.validate();
            if (form.valid()) {
                event.preventDefault();
                var formData = form.serialize();
                $.ajax({
                    url: '@Url.Action("AddActivity", "Agent")',
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        $('#modal_addActualActivity').modal('hide');
                        SearchData(1);
                        swalInit.fire({
                            title: 'Success!',
                            text: 'Activity added successfully!',
                            icon: 'success'
                        });
                    }
                });
            }

        }

         function SearchData(page) {
            @{ var filter = new CaliphWeb.Models.API.AgentRecruit.FiltertAgentRecruitRequest();
                }
            var searchFilter = @Html.Raw(Json.Encode(filter));
            searchFilter.PageNumber = page;
             searchFilter.AgentRecruitId = $('#AgentRecruitId').val();
             searchFilter.CreatedBy = $('#CreatedBy').val();
             searchFilter.Name = $('#Name').val();
             searchFilter.StatusId = $('#StatusId').val();
             searchFilter.PageSize = $('#show-entries').val();

             var date = $('#CreatedDate').val();

             if (date.length > 0) {
                 searchFilter.CreatedDateFrom = $('#CreatedDate').data().daterangepicker.startDate._d.toJSON();
                 searchFilter.CreatedDateTo = $('#CreatedDate').data().daterangepicker.endDate._d.toJSON();
             }


             var loading = $('#loading').html();
             $('#recruitment-table').html(loading);
            $.ajax({
                url: '@Url.Action("List", "Agent")',
                type: 'POST',
                data: searchFilter,
                success: function (response) {

                    $('#recruitment-table').html(response);
                }
            });

        }

        $('#timefrom').pickatime({
            onStart: function () {
                var date = new Date();
                this.set('select', [8, 0])
                startDate = new Date(date.getDate() + " " + timeto);

            },

            min: [8, 00],
            max: [23, 30]
        });

        $('#timeto').pickatime({
            onStart: function () {
                var date = new Date();
                this.set('select', [9, 0])
                endDate = new Date(date + " " + timeto);
            },
            min: [8, 00],
            max: [23, 30]
        });


        function ConfirmUpdate(id, status) {

            var closed = 5;
            var lost = 7;

                var udpateStatus = "";
            if (status === closed)
                    udpateStatus = "Are you sure to <span class=\"badge badge-success\">closed</span> this recruitment?";
            else if (status == lost)
                udpateStatus = "Are you sure you have <span class=\"badge badge-danger\">lost</span> this recruitment ?";

                swalInit.fire({
                    icon: 'warning',
                    title: udpateStatus,
                    html: 'You won\'t be able to revert this!',
                    confirmButtonText: 'Yes!',
                    cancelButtonText: 'No!',
                    showCancelButton: true,
                    reverseButtons: true,
                    customClass: {
                        confirmButton: 'btn btn-success pull-right',
                        cancelButton: 'btn btn-danger pull-left'
                    }
                }).then((result) => {
                    /* Read more about isConfirmed, isDenied below */
                    if (result.isConfirmed) {
                        UpdateStatus(id,status);
                    }
                    else if (result.isDenied) {
                        Swal.fire('Changes are not saved', '', 'info')
                    }
                });
            }


        function UpdateStatus(id, status) {
            event.preventDefault();
            $.ajax({
                url: '@Url.Action("UpdateStatus", "Agent")',
                type: 'POST',
                data: { status: status, id: id },
                success: function (response) {
                    if (response.IsSuccess) {
                        swalInit.fire({
                            title: 'Success!',
                            text: 'recruitment updated successfully!',
                            icon: 'success'
                        });
                        SearchData(1);
                    }
                    else {
                        swalInit.fire({
                            text: 'Changes are not saved',
                            icon: 'info'
                        });
                    }
                },
                error: function(){
                    swalInit.fire({
                        text: 'Changes are not saved',
                        icon: 'info'
                    });
                }
            });
        }




         function ShowUpdateSuccess() {
            swalInit.fire({
                title: 'Update!',
                text: 'Status updated',
                icon: 'success'
            });
        }


    </script>
}
